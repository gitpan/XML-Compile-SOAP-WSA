=head1 NAME

XML::Compile::SOAP::WSA - SOAP Web Service Addressing

=head1 INHERITANCE

 XML::Compile::SOAP::WSA
   is a XML::Compile::SOAP::Extension

=head1 SYNOPSIS

 # load the module
 use XML::Compile::SOAP::WSA;
 my $wsa  = XML::Compile::SOAP::WSA->new(version => '1.0');

 # you may need some constants (rarely)
 use XML::Compile::SOAP::WSA::Util ':wsa10';

 # use WSA via WSDL
 my $wsdl = XML::Compile::WSDL11->new(...);
 $wsdl->extension($wsa);
 my $call = $wsdl->compileClient('some_operation');

 # wsa header fields start with wsa_
 my ($data, $trace) = $call->(wsa_MessageID => 'xyz', %data);

=head1 DESCRIPTION

The Web Service Addressing protocol is used to select certain
service and port on a SOAP server, just like the "Host" header
in C<HTTP>.

The basic SOAP design uses the URI and the C<soapAction> header of HTTP
(in case it uses HTTP, by far the most often used transport mechanism)
However, when the server is hidden behind firewalls and proxies, these
fields are rewritten or replaced.  This means that the definitions by
the WSDL for the client can differ from the configuration of the server.
This is where WSA comes into play.

When WSA is enabled, header fields are added. Automatically, the
obligatory C<wsa_To> and C<wsa_Action> fields will be added to
each request, although you may change their values with call
parameters.

B<Warning:> this being a very recent module, thing may not work. There
is no real-life experience with the code, as yet. Please contact the
author when you are succesful or discovered problems.

=head1 METHODS

=head2 Constructors

XML::Compile::SOAP::WSA-E<gt>B<new>(OPTIONS)

=over 4

 Option --Default
 version  <required>

. version => '0.9'|'1.0'|MODULE

=over 4

Explicitly state which version WSA needs to be produced.
You may use a version number (where C<0.9> is used to represent
the "submission" specification). You may also use the MODULE
name, which is a namespace constant, provided via C<::Util>.
The only option is currently C<WSL10MODULE>.

=back

=back

=head2 Attributes

$obj-E<gt>B<version>

=over 4

Returns the version number.

=back

$obj-E<gt>B<wsaNS>

=over 4

Returns the namespace used for this WSA version.

=back

=head2 Extending SOAP and WSDL

=head2 SEE ALSO

=over 4

=item Web Services Addressing 1.0 - Core

F<http://www.w3.org/TR/ws-addr-core>, 9 May 2006

=item Web Services Addressing 1.0 - SOAP Binding

F<http://www.w3.org/TR/ws-addr-soap>, 9 May 2006

=item Web Services Addressing 1.0 - WSDL Binding

F<http://www.w3.org/TR/ws-addr-wsdl>, 29 May 2006

=back

=head1 SEE ALSO

This module is part of XML-Compile-SOAP-WSA distribution version 0.10,
built on June 15, 2010. Website: F<http://perl.overmeer.net/xml-compile/>

All modules in this suite:
L<XML::Compile>,
L<XML::Compile::SOAP>,
L<XML::Compile::SOAP12>,
L<XML::Compile::SOAP::Daemon>,
L<XML::Compile::SOAP::WSA>,
L<XML::Compile::Tester>,
L<XML::Compile::Cache>,
L<XML::Compile::Dumper>,
L<XML::Compile::RPC>,
and
L<XML::Rewrite>,
L<XML::ExistDB>,
L<XML::LibXML::Simple>.

Please post questions or ideas to the mailinglist at
F<http://lists.scsys.co.uk/cgi-bin/mailman/listinfo/xml-compile>
For life contact with other developers, visit the C<#xml-compile> channel
on C<irc.perl.org>.

=head1 LICENSE

Copyrights 2010 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

